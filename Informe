En este informe se presentan los resultados y análisis de la implementacion de la Tarea 2.

El tamaño del archivo a utilizar será el mismo para todos las pruebas: 122,5 kB (122.526 bytes)

I. Resultados segun tipo de conexión.

 (A) Two-Way Handshake

1) Sin perdida y sin delay:

Las conexiones se establecen y se cierran sin problemas. El tiempo de envio es de 3.67 segundos. No hay retransmisiones. El archivo se envia correctamente.

2) Perdida 10% y sin delay:

No se logra establecer conexion.

3) Perdida 30% y sin delay:

No se logra establecer conexion.

4) Sin perdida y delay 100ms:

Se logra establecer la conexion, pero no se realiza el envio y no cierra la conexion.

5) Perdida 10% y delay 100ms:

No se logra establecer la conexion.

6) Perdida 30% y delay 100ms:

No se logra establecer conexion.

7) Sin perdida y delay 500ms:

Se logra establecer la conexion.

8) Perdida 10% y delay 500ms:

No se logra establecer conexion.

9) Perdida 30% y delay 500ms:

No se logra establecer la conexion de forma correcta.

10) Perdida 100% y sin delay:

No se logra establecer conexion.

11) Perdida 100% y delay 100ms:

No se logra establecer conexion.

 (B) Three-Way Handshake

1) Sin perdida y sin delay:

Las conexiones se establecen y se cierran sin problemas. El tiempo de envio es de 3.66 segundos. No hay retransmisiones. El archivo se envia correctamente.

2) Perdida 10% y sin delay:

Se realiza la conexion con exito, pero el envio no se realiza de forma correcta y no se cierra la conexion de forma correcta.

3) Perdida 30% y sin delay:

No se logra establecer la conexion.

4) Sin perdida y delay 100ms:

Se logra establecer la conexion con exito, pero el envio de datos se demora demasiado. Finalmente el servidor cierra la conexion.

5) Perdida 10% y delay 100ms:

No se logra establecer la conexion de forma correcta.

6) Perdida 30% y delay 100ms:

Se realiza la conexion de forma correcta, pero no hay correcto envio de datos. El servidor cierra la conexion.

7) Sin perdida y delay 500ms:

Se realiza la conexion con exito, pero el envio demora demasiado.

8) Perdida 10% y delay 500ms:

No se realiza la conexion de forma correcta.

9) Perdida 30% y delay 500ms:

No se establece la conexion de forma correcta.

10) Perdida 100% y sin delay:

No se establece conexion.

11) Perdida 100% y delay 100ms:

No se establece conexion.

II. Análisis de resultados.

El protocolo, tanto para la conexion Two-WHS y Three-WHS, funciona correctamente cuando no hay delay y ni perdida de paquetes provocados por el control de trafico de netem. En este caso, no hay retransmisiones y el envio demora alrededor de 3.7 segundos.

En el caso de Two-WHS, cuando solo hay delay, se logra establecer las conexiones, pero no hay envio de paquete.

En el caso de Three-WHS, cuando solo hay delay, tambien se logra establecer las conexiones, pero el envio de paquete demora demasiado, no es eficiente.

Ambos tipos de conexion tienen sus mayores problemas al haber perdida. Para Two-WHS, la perdida significa que no hay conexion o no hay una correcta conexion (generalmente el cliente dice que se conecto, pero el servidor no). Para Three-WHS, la perdida significa que: no hay conexion; hay conexion, pero no hay envio o este se demora; hay conexion, pero es incorrecta.

Pareciera ser que Three-WHS logra sortear mejor los problemas, pero el margen de exito entre los dos tipos de conexion es pequeño.

El protocolo mejoraria probablemente con una mejor implementacion de los timeouts (es decir, un mejor uso del algoritmo de Karn). Como tambien con una mejor implementacion del cierre de conexiones al caerse el cliente o el servidor.


